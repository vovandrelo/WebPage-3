/* <================================================================================================================> */
/* <============================================== НЕОБХОДИМЫЕ МОДУЛИ ==============================================> */
/* <================================================================================================================> */

// 1. Модуль FS - предоставляет функционал для работы с файловой структурой:
import fs from "fs";

// 2. Модуль Path - предоставляет функционал для работы с путями:
import * as pathNode from "path";

// 3. Пользовательский модуль Path - предоставляет информацию о путях к необходимым файлам/папкам
import { path } from "../../config/path.js";

/* <================================================================================================================> */
/* <============================= РЕАЛИЗАЦИЯ ЗАДАЧИ ПОДКЛЮЧЕНИЯ НЕОБХОДИМЫХ PUG-ФАЙЛОВ =============================> */
/* <================================================================================================================> */

// Функция находит пути до необходимых PUG-файлов:
const searchPugFiles = (currentPath, importBlocksFile) => {
    // Считывавем названия всех файлов по указанному пути:
    fs.readdir(currentPath, (err, blocks) => {
        // Если произошла ошибка, выводим соответствующее сообщение:
        if (err) {
            console.log("Файлы PUG не были подключены. " + err);
        // Если ошибки не произошло, то:
        } else {
            // Если в указанном папке были файлы/папки, то:
            if (blocks) {
                // Перебираем все названия файлов:
                blocks.forEach(file => {
                    // Если текущее название - название папки, то:
                    if (pathNode.extname(file) === "" && file !== ".DS_Store") {
                        // Заходим в эту папку и повторяем все действия функции:
                        searchPugFiles(`${currentPath}${file}/`, importBlocksFile);
                    // Если текущее название - название sass-файла, то:
                    } else if (pathNode.extname(file) === ".pug") {
                        // Добавляем в blocks.pug строку с подключением текущего файла:
                        fs.appendFile(importBlocksFile, createImportedPath(currentPath, file), err => {
                            // В случае ошибки выводим соответствующее сообщение:
                            if(err) {
                                console.log("Файлы PUG не были подключены. " + err);
                            }
                        });
                    }
                });
            }
        }
    }); 
};

// Функция формирует строку подключения для pug-файла:
const createImportedPath = (path, fileName) => {
    return `include ../${path.substring(6)}${fileName}\n`;
};

// Функция находит пути до необходимых pug-файлов и подключает их в blocks.pug
export const includeBlocksPug = cb => {
    // Папка с блоками:
    const blocksFolder = `${path.srcFolder}/blocks/`;

    // Файл с импортами блоков:
    const importBlocksFile = `${path.srcFolder}/pug/include-blocks.pug`;

    // Отчищаем текущий файл с импортами блоков:
    fs.writeFileSync(importBlocksFile, "");

    // Выполняем основную задачу функции:
    searchPugFiles(blocksFolder, importBlocksFile);

    cb();
};